{"version":3,"sources":["components/CustomNavbar/CustomNavbar.jsx","Validate.jsx","components/Access/Access.jsx","components/VendorCard/VendorCard.jsx","components/ItemCard/ItemCard.jsx","services/agent.js","components/Home/Home.jsx","components/CheckoutItemCard/CheckoutItemCard.jsx","components/Checkout/Checkout.jsx","App.js","serviceWorker.js","reducers/user-reducers.js","index.js"],"names":["CustomNavbar","react_default","a","createElement","className","Navbar","default","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","style","fontSize","eventKey","componentClass","Link","href","to","onClick","this","props","logout","Component","Validate","util","validateEmail","email","test","validatePassword","password","length","Access","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","endOverlay","state","overlay","setState","document","getElementById","display","initOverlay","message","innerText","errorDialog","Dialog","setOptions","defaultOkLabel","dialog","show","body","actions","OKAction","onSubmit","loginError","emailError","passwordError","value","setTimeout","onSuccess","status","handleChange","event","type","data","target","handleEnter","e","keyCode","signin","signup","termscondition","handleRegisteration","promptDialog","title","placeholder","CancelAction","el","console","log","verifyOTP","bsSize","prompt","initialValue","onHide","hide","alertDialog","successDialog","redirectToReferrer","l_name","l_pass","loginBtn","entryFields","loginHeader","mainDiv","_this2","_emailEr","_emailErVal","readOnlyError","Button","background","color","bsStyle","bsClass","disabled","TextField_default","id","label","error","onChange","helperText","margin","inputProps","createAccount","Redirect","onKeyUp","react_loader_spinner_default","dist_default","ref","connect","sessionData","session","user","dispatch","updateUser","userObject","payload","withStyles","theme","container","flexWrap","textField","marginTop","marginBottom","marginLeft","spacing","unit","marginRight","width","dense","menu","VendorCard","addQtyByOne","update","vendorId","price","operation","number","removeQtyByOne","updateQty","brandName","textAlign","paddingLeft","priceDiv","height","paddingTop","vendorCardMain","borderRadius","border","padding","collectQty","collectData","qty","undefined","itemDescriptionText","readMore","itemDescription","desc","substr","float","Image","src","maxWidth","maxHeight","fontWeight","name","brand","cursor","minLength","Itemcard","clickItem","click","boxStyle","selected","textStyle","procure","checked","CLOUD","API_ROOT","URL","assign","axios","defaults","headers","common","concat","requests","url","get","then","res","catch","agent","Procure","itemList","vendorList","vendorItemList","Home","componentDidMount","itemLookup","fetchItems","fetchVendorItem","fetchVendors","load","result","forEach","d","pk","fields","vendorLookup","collectVendor","item","vendor","vendorItemLookup","vendorItem","itemId","push","selectItem","_State","selectedItem","updateItem","procurementData","previousQty","parseFloat","moveToCheckout","proceedToCheckout","renderCheckout","pathname","clearSelection","location","headerDiv","itemCardList","itemObject","key","ItemCard_ItemCard","noItemStyle","vendorCardList","selectedItemName","vendorIdList","vendorCollectData","vendorQty","components_VendorCard_VendorCard","description","overflowY","react_icons_kit_default","icon","shoppingCart","CheckoutItemCard","cardItem","ItemNameHeader","vendorNameHeader","itemData","totalPrice","procurement","procureData","Checkout","moveToHome","renderHome","updateConfirmationVisibility","confirmationModel","confirmtionShow","itemNameCol","checkoutItemList","tableColumnForBilling","finalBillingPrice","itemProcure","addItemForBilling","totalItemPrice","totalItemQty","components_CheckoutItemCard_CheckoutItemCard","Modal","dialogClassName","aria-labelledby","closeButton","Title","Body","Table","bordered","hover","size","colSpan","Date","toLocaleDateString","paddingRight","nameHeader","App","updateAccessDetails","loginAccess","onLogout","pages","components_Access_Access","components_CustomNavbar_CustomNavbar","Route","exact","path","component","BrowserRouter","Boolean","window","hostname","match","userReducer","arguments","_ref","allReducer","combineReducers","store","createStore","devToolsExtension","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee754458.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Image,NavDropdown} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './CustomNavbar.css'\n\nclass CustomNavbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-space\">\n        <Navbar default collapseOnSelect >\n            <Navbar.Header>\n                <Navbar.Brand>\n                    GrowHospital\n                    {/* <Image style={{padding:'0%'}} src=\"/assets/wiztute-01.png\" circle className=\"app-logo\" /> */}\n                    {/* <Link to={'/'}>Wiztute</Link> */}\n                </Navbar.Brand>\n                <Navbar.Toggle />\n            </Navbar.Header>\n            <Navbar.Collapse>\n                <Nav pullRight>\n                    <NavItem className=\"nav-style\" style={{fontSize:'18px'}} eventKey={1} componentClass={Link} href=\"/\" to=\"/\">\n                        Home\n                    </NavItem>\n                    {/* <NavItem className=\"nav-style\" style={{fontSize:'1vw'}}  onClick={this.props.logout} eventKey={4} componentClass={Link} href=\"/purchase-history\" to=\"/purchase-history\">\n                        Purchase History\n                    </NavItem> */}\n                    {/* <NavDropdown title=\"Transaction\" id=\"basic-nav-dropdown\">\n                      <NavItem className=\"nav-style\" style={{fontSize:'1vw'}} eventKey={1} componentClass={Link} href=\"/mysession\" to=\"/mysession\">\n                        Courses Sessions\n                      </NavItem>\n                      <NavItem disabled className=\"nav-style\" style={{fontSize:'1vw'}} eventKey={1} componentClass={Link} href=\"/assignment\" to=\"/assignment\">\n                        Assignments\n                      </NavItem>\n                      <div  style={{width:\"100%\",height:\"1px\",background:\"#ddd\", marginTop:\"5%\",marginBottom:\"5%\"}} />\n                      <NavItem className=\"nav-style\" style={{fontSize:'1vw'}} eventKey={1} componentClass={Link} href=\"/transactions\" to=\"/transactions\">\n                        Purchase History\n                      </NavItem>\n                    </NavDropdown> */}\n                    <NavItem className=\"nav-style\" style={{fontSize:'1vw'}}  onClick={this.props.logout} eventKey={4} componentClass={Link} href=\"/\" to=\"/\">\n                      Logout\n                    </NavItem>\n                </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n      </div>\n    )\n  }\n}\nexport default CustomNavbar;","const util = {\n    validateEmail : (email) => {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if(email==\"\"){\n        return \"Email cannot be blank\"\n      }else if(!re.test(email)){\n        return \"Invalid email format\"\n      }else{\n        return 1;\n      }\n    },\n    validatePassword : (password) => {\n      if(password.length < 3){\n        return \"Password cannot be less than 8 characters\";\n      }else{\n        return 1;\n      }\n    }\n  }\n  \n  export default {\n      util\n  }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {Redirect} from 'react-router-dom';\nimport './Access.css';\nimport Dialog from 'react-bootstrap-dialog'\nimport { Button, Tabs, Tab, Image} from 'react-bootstrap';\nimport Validate from '../../Validate.jsx';\nimport Loader from 'react-loader-spinner'\n//import agent from '../../services/agent.js';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginTop: 6,\n      marginBottom: 6,\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 9,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nconst textdata = \"Will show up soon.\";\n\nclass Access extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n        redirectToReferrer: false,\n        termscondition : false,\n        signin: true,\n        data : {\n            //login values\n            l_name : \"\",\n            l_pass : \"\",\n        },\n        loginError : {\n            email : \"\",\n            password    : \"\"\n        },\n    }\n  }\n\n  endOverlay = () => {\n    if(this.state.overlay){\n      this.setState({overlay:false})\n      document.getElementById(\"overlay\").style.display = \"none\";\n    }\n  } \n\n  initOverlay = (message) => {\n      if(!this.state.overlay){\n        this.setState({overlay:true})\n        document.getElementById(\"loader-message\").innerText = message\n        document.getElementById(\"overlay\").style.display = \"block\";\n      }\n  }\n\n  errorDialog = (message)=> {\n    Dialog.setOptions({\n      defaultOkLabel: 'Ok'\n    })\n    this.dialog.show({\n      body: message,\n      actions: [\n        Dialog.OKAction(\n          () => {\n            //Do nothing\n          }\n        )\n      ]\n    })\n  }\n\n  onSubmit = () =>{\n        let emailError = \"\", passwordError = \"\";\n        let loginError = this.state.loginError;\n        const email = document.getElementById(\"standard-email\").value;\n        const password = document.getElementById(\"standard-password\").value;\n\n        emailError = Validate.util.validateEmail(email);\n        passwordError = Validate.util.validatePassword(password);\n\n        if( emailError != 1 ){\n            this.errorDialog(emailError)\n        }else if( passwordError != 1 ){\n            this.errorDialog(passwordError)\n        }else{\n            this.initOverlay(\"Login in to your dashboard.\");\n            const timeout = setTimeout(() => {\n              this.endOverlay();\n              if( email == \"gourav@growhospital.com\" && password == \"qwerty12345\"){\n                this.props.onSuccess({\n                  status : true\n                });\n              }else{\n                this.errorDialog(\"Incorrect Email or Passowrd\");\n              }\n            }, 500);\n            \n            // agent.Auth.login(email,password).then(data => {\n            //     const encryptedString = cryptr.encrypt(JSON.stringify({u:email,p:password}));\n            //     this.endOverlay();\n            //     try{\n            //         if( data.data.status == 1 ){\n\n            //                 const userObject = data.data.result;\n\n            //                 //update data to local\n            //                 localStorage.USER.updtaeUserAccess(\n            //                     userObject[\"id\"],\n            //                     userObject[\"name\"],\n            //                     userObject[\"email\"],\n            //                     userObject[\"mobile\"],\n            //                     userObject[\"picture\"],\n            //                 );\n\n            //                 //update the data to Redux\n            //                 this.props.updateUser(userObject);\n\n            //                 //Login in to your dashboard\n            //                 this.props.onSuccess(userObject);\n\n            //         }else if( data.data.status == 0 ){\n            //                 console.log(data.data)\n            //                 this.errorDialog(data.data.message);\n            //         }\n            //     }catch(e){\n            //         this.errorDialog(\"Could not Sign In\");\n            //     }\n            // });\t\n        }\n  }\n\n  handleChange = (event, type)=>{\n    let data = this.state.data;\n    data[type] = event.target.value;\n    this.setState({\n        data : data\n    })\n  }\n\n  handleEnter = (e) => {\n    if( e.keyCode == 13){\n        if( this.state.signin ){\n            this.onSubmit('signin')\n        }else if( this.state.signup ){\n            this.onSubmit('signup')\n        }else if( this.state.termscondition ){\n            this.handleRegisteration(\"signin\")\n        }\n    }\n  }\n\n  promptDialog = (title,body,placeholder,type) => {\n    this.dialog.show({\n      title: title,\n      body: body,\n      actions: [\n        Dialog.CancelAction(\n          () => {\n\n          }\n        ),\n        Dialog.OKAction(\n          (el) => {\n            console.log(el.value)\n            if(type == 'otp'){\n              this.verifyOTP(el.value);\n            }\n          }\n        )\n      ],\n      bsSize: 'small',\n      prompt: {initialValue: '', placeholder: placeholder},\n      onHide: (dialog) => {\n        dialog.hide()\n        console.log('closed by clicking background.')\n      }\n    })\n  }\n\n  alertDialog = (title,body) => {\n    Dialog.setOptions({\n      defaultOkLabel: 'Ok'\n    })\n    this.dialog.show({\n      title: title,\n      body: body,\n      actions: [\n        Dialog.OKAction(\n          (el) => {\n\n          }\n        )\n      ],\n      bsSize: 'small',\n      onHide: (dialog) => {\n        dialog.hide()\n      }\n    })\n  }\n\n  successDialog = (message) => {\n    Dialog.setOptions({\n      defaultOkLabel: 'Ok'\n    })\n    this.dialog.show({\n      body: message,\n      actions: [\n        Dialog.OKAction(\n          () => {\n\n          }\n        )\n      ]\n    })\n  }\n\n  render() {\n\n    let loginBtn, forgotPassword, createAccount,entryFields , socialLogin, loginHeader, tncdiv;\n    let dataDiv, mainDiv;\n\n    let loginButtonDisabled = {\n        background : \"#e3e3e3\",\n        color : \"black\"\n    }\n    let loginButtonEnabled = {\n        background : \"#2196F3\",\n        color : \"white\"\n    }\n    if( this.state.signin ){\n        const _emailEr=false,_passEr=false,_emailErVal=\"\",_passErVal=\"\";\n        if(this.state.loginError.email != \"\"){\n            _emailEr = true;\n            _emailErVal = this.state.loginError.email;\n        }\n        if(this.state.loginError.password != \"\"){\n            _passEr = true;\n            _passErVal = this.state.loginError.password;\n        }\n        //Define the inner widgets\n        loginHeader = <div className=\"main-header-login\">User Login</div>\n\n        // Button\n        if( this.state.data.l_name !== \"\" && this.state.data.l_pass !== \"\" ){\n            loginBtn = <Button \n                            className=\"signup-btn\" \n                            style={loginButtonEnabled}\n                            onClick={()=>this.onSubmit('signin')}\n                            bsStyle=\"primary\"\n                            bsClass=\"secondary\">\n                            Login\n                        </Button>\n        }else{\n            loginBtn = <Button \n                            className=\"signup-btn\" \n                            style={loginButtonDisabled}\n                            disabled = {true}\n                            // onClick={()=>this.onSubmit('signin')}\n                            bsStyle=\"primary\"\n                            bsClass=\"secondary\">\n                            Login\n                        </Button>\n        }\n        //Text Entry Field\n        entryFields = <div>\n                        <div>\n                            <TextField\n                                    id=\"standard-email\"\n                                    label=\"Email Address\"\n                                    error={ _emailEr }\n                                    onChange={(e) => this.handleChange(e,'l_name')}\n                                    helperText = { _emailErVal }\n                                    margin=\"normal\"\n                                    className=\"input-field\"\n                                    inputProps={{\n                                        style: {fontSize: 15} \n                                    }}\n                                />\n                          </div>\n                        <div>\n                            <TextField\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    error={ (this.state.loginError.password != \"\") ? true :false }\n                                    helperText = { (this.state.loginError.password != \"\") ? this.state.loginError.password :\"\" }\n                                    onChange={(e) => this.handleChange(e,'l_pass')}\n                                    margin=\"normal\"\n                                    type=\"password\"\n                                    className=\"input-field\"\n                                    inputProps={{\n                                        style: {fontSize: 15} \n                                    }}\n                                />\n                         </div>\n                    </div>\n\n        //Define the main widget\n        mainDiv = <div className=\"access-wrapper\">\n                        <div className=\"login-div\">\n                            {loginHeader}\n                            {createAccount}\n                            {entryFields}\n                            {loginBtn}\n                        </div>\n                    </div>\n    }\n\n    if(this.state.redirectToReferrer){\n        return (<Redirect to={'/access'}/>);\n    }\n\n    return (\n      <div className=\"main\" onKeyUp={this.handleEnter} >\n            <div id=\"overlay\">\n                <Loader \n                    className=\"loader-div\"\n                    type=\"Puff\"\n                    color=\"#00BFFF\"\n                />   \n                <div id=\"loader-message\" style={{color:'#FFFFFF',fontSize : '1.3vw'}}>Loading</div>\n            </div>\n            {mainDiv}\n            <Dialog ref={(el) => { this.dialog = el }} />\n      </div>\n    )\n  }\n}\n\nAccess.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = (state) => {\n    return {\n        sessionData : state.session,\n        user : state.user \n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateUser: (userObject) => {\n            dispatch({type: 'UPDATE_USER',payload : { user : userObject }})\n        }\n    };\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Access));  \n\n","import React, { Component } from 'react';\nimport { Image } from 'react-bootstrap';\nimport Icon from 'react-icons-kit';\nimport {tag} from 'react-icons-kit/fa/tag'\nimport './VendorCard.css';\n\nclass VendorCard extends Component {\n\n  addQtyByOne = () => {\n    this.props.update({\n        vendorId : this.props.id,\n        price : this.props.price,\n        operation : \"add\",\n        number : 1\n    })\n  }\n  removeQtyByOne = () => {\n    this.props.update({\n        vendorId : this.props.id,\n        price : this.props.price,\n        operation : \"remove\",\n        number : 1\n    })\n  }\n  updateQty = (event) => {\n    this.props.update({\n        vendorId : this.props.id,\n        price : this.props.price,\n        operation : \"update\",\n        number : event.target.value\n    })\n  }\n  render() {\n    const vendorDetail = {\n        height : \"25%\",\n        width : \"100%\",\n        marginBottom : \"10px\"\n    }\n    const vendorLogo = {\n        height : \"100%\",\n        width : \"15%\",\n        float : 'left'\n    }\n    const vendorName = {\n        height : \"100%\",\n        width : \"80%\",\n        float : 'left',\n        textAlign : \"start\",\n        paddingTop : \"3%\",\n        paddingLeft : \"2%\",\n        fontSize : \"1vw\",\n        fontWeight : \"bold\"\n    }\n    const imageSize = {\n        maxWidth:'100%',\n        maxHeight:'100%',\n        border : \"1px solid #E0E0E0\"\n    }\n    const brandDetail = {\n        height : \"10%\",\n        width : \"100%\",\n        marginBottom : \"5px\",\n        fontSize : \"0.9vw\"\n    }\n    const brandName = {\n        textAlign : \"start\",\n        paddingLeft : \"2%\",\n    }\n    const descriptionDiv = {\n        height : \"25%\",\n        width : \"100%\",\n        marginBottom : \"5px\",\n        fontSize : \"0.8vw\"\n    }\n    const priceDivider = {\n        width: \"100%\",\n        height: \"1px\",\n        background: \"#E0E0E0\",\n    }\n    const priceDetail = {\n        height : \"25%\",\n        width : \"100%\",\n        fontSize : \"1vw\",\n    }\n    const priceDiv = {\n        height : \"100%\",\n        textAlign : \"start\",\n        paddingTop : \"4px\",\n    }\n    const priceValue = {\n        fontSize : \"1vw\",\n        width : \"100%\",\n        height : \"60%\",\n        fontWeight : \"bold\"\n    }\n    const priceSubDetail = {\n        fontSize : \"0.6vw\",\n        width : \"100%\",\n        height : \"30%\"\n    }\n    const addBtnStyleLeft = {\n        height : \"100%\",\n        width : \"25%\",\n        float : \"left\",\n        borderRadius : \"5px 0 0 5px\",\n        cursor : \"pointer\",\n        background : \"#66BB6A\",\n        fontSize : \"1.5vw\",\n        textAlign : \"center\",\n        color : \"white\"\n    }\n    const addBtnStyleMid = {\n        height : \"100%\",\n        border : \"1px solid #ddd\",\n        width : \"50%\",\n        float : \"left\"\n    }\n    const addBtnStyleRIght = {\n        height : \"100%\",\n        width : \"25%\",\n        float : \"left\",\n        borderRadius : \"0 5px 5px 0\",\n        cursor : \"pointer\",\n        background : \"#66BB6A\",\n        fontSize : \"1.5vw\",\n        textAlign : \"center\",\n        color : \"white\"\n    }\n\n    let vendorCardMain = {\n        height: \"100%\",\n        width: \"100%\",\n        borderRadius: \"7px\",\n        border: \"1px solid #E0E0E0\",\n        padding: \"2%\",\n    }\n\n    const collectData = this.props.collectData;\n    const collectQty = collectData.qty;\n\n    if(collectQty == undefined || collectQty == 0 ){\n        vendorCardMain.border = \"1px solid #E0E0E0\";\n    }else{\n        vendorCardMain.border = \"2px solid #66BB6A\";\n    }\n\n    const readMore = <span className=\"read-more\">...more</span>;\n    const itemDescription = this.props.desc;\n    let itemDescriptionText;\n    if( itemDescription.length > 90){\n        itemDescriptionText = itemDescription.substr(0,80)\n    }else{\n        itemDescriptionText = itemDescription\n    }\n    return (\n      <div style={vendorCardMain}>\n        <div style={vendorDetail}>\n                {/* Vendor name */}\n                <div style={vendorLogo}><Image src=\"/assets/vendor.png\" style={imageSize}/></div>\n                {/* Vendor logo */}\n                <div style={vendorName}>{this.props.name}</div>\n        </div>\n        <div style={brandDetail}>\n                {/* Brand Detail */}\n                <div style={brandName}><b>Brand</b>: {this.props.brand}</div>\n        </div>\n        <div style={descriptionDiv}>\n                {/* Brand Detail */}\n                <div style={brandName}><b>Description</b>:  {itemDescriptionText} {itemDescription.length>90?readMore:\"\"} </div>\n        </div>\n        <div style={priceDivider}></div>\n        <div style={priceDetail}>\n             <div style={priceDiv} className=\"col-xs-6\">\n                <div style={priceValue}>Rs. {this.props.price}</div>\n                <div style={priceSubDetail}>(price per qty)</div>\n             </div>\n             <div style={priceDiv} className=\"col-xs-6\">\n                 <div style={addBtnStyleLeft} onClick={this.removeQtyByOne}> - </div>\n                 <div style={addBtnStyleMid}> <input minLength=\"0\" onChange={this.updateQty} className=\"inputStyle\" value={collectQty==undefined?0:collectQty} type=\"number\"/> </div>\n                 <div style={addBtnStyleRIght} onClick={this.addQtyByOne}> + </div>\n             </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default VendorCard;","import React, { Component } from 'react';\nimport \"./ItemCard.css\";\n\nclass Itemcard extends Component {\n  clickItem = () => {\n    this.props.click({\n      id : this.props.id\n    })\n  }\n\n  render() {\n    let boxStyle = {\n        height: \"100%\",\n        width: \"100%\",\n        borderRadius: \"5px\",\n        padding: \"2%\",\n        cursor: \"pointer\"\n    }\n    if( this.props.selected ){\n      boxStyle[\"border\"] = \"2px solid #42A5F5\";\n      boxStyle[\"boxShadow\"] = \"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2)\"\n    }else{\n      boxStyle[\"border\"] = \"1px solid #E0E0E0\";\n    }\n\n    let textStyle = {\n        width : \"100%\",\n        height : \"100%\",\n        textAlign : \"Start\",\n        paddingTop : \"2%\",\n        paddingLeft : \"2%\",\n        fontSize : \"0.9vw\",\n        fontWeight : \"bold\",\n    }\n    const procure = this.props.procure;\n    let checked = false;\n    for(let vendorId in procure){\n      if( procure[vendorId].qty > 0 ){\n        checked = true\n      }\n    }\n    if(checked){\n      textStyle.color = \"#66BB6A\";\n    }else{\n      textStyle.color = \"#546E7A\";\n    }\n    return (\n      <div style={boxStyle} onClick={this.clickItem} >\n          <div style={textStyle}>{this.props.name}</div>\n      </div>\n    )\n  }\n}\nexport default Itemcard;","import axios from 'axios';\nimport qs from 'qs';\n\n//This will check, which urls to use\nconst develop = false;\n\nconst CLOUD = {\n\tLOCAL : {\n\t\tAPI_ROOT : 'http://localhost:8080/',\n\t},\n\tSERVER : {\n\t\tAPI_ROOT : 'http://3.86.155.41:8080/',\n\t}\n}\n\nlet URL = {};\nif( develop ){\n\tURL = Object.assign({}, CLOUD.LOCAL )\n}else{\n\tURL = Object.assign({}, CLOUD.SERVER )\n}\n\nconst authToken = \"fe5c171ac720d5145cfcf5170eb631946e6f4c48\";\naxios.defaults.headers.common['Authorization'] = `Token ${authToken}` \n\nconst requests = {\n\tget : (url) => {\n\t\treturn axios.get(URL.API_ROOT + url)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t    console.log(error);\n\t\t\t\t\t})\n\t},\n\tpost : (url ,body) => {\n\t\treturn axios.post(URL.API_ROOT + url, body)\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t    console.log(error);\n\t\t\t })\n\t}\n}\n\nconst Procure = {\n\titemList : () => {\n\t\treturn requests.get('procure/items');\n    },\n    vendorList : () => {\n\t\treturn requests.get('procure/vendors');\n    },\n    vendorItemList : () => {\n\t\treturn requests.get('procure/vendor-items');\n    },\n}\n\nexport default {\n    Procure\n}","import React, { Component } from 'react';\nimport VendorCard from './../VendorCard/VendorCard.jsx';\nimport ItemCard from \"./../ItemCard/ItemCard.jsx\"\nimport {shoppingCart} from 'react-icons-kit/fa/shoppingCart';\nimport Icon from 'react-icons-kit';\nimport agent from '../../services/agent.js';\nimport {search} from 'react-icons-kit/fa/search'\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport './Home.css';\n\nclass Home extends Component {\n\n  constructor(props){\n      super(props);\n\n      const state = this.props.location.state;\n      console.log( \"Data received :\" ,state );\n      if( state == undefined ){\n        this.state = {\n            vendorLookup : null,\n            itemLookup : null,\n            vendorItemLookup : null,\n            load : false,\n            selectedItem : null,\n            proceedToCheckout : false\n        }\n      }else{\n        this.state = {\n            vendorLookup : this.props.location.state.data.vendorLookup,\n            itemLookup : this.props.location.state.data.itemLookup,\n            vendorItemLookup : this.props.location.state.data.vendorItemLookup,\n            load : false,\n            selectedItem : null,\n            proceedToCheckout : false\n        }\n      }\n      //console.log(\"Data from home : \",this.props.location.state.data);  \n  }\n  \n  componentDidMount = () => {\n    \n    if( this.state.itemLookup == null ){\n        this.initOverlay(\"Fetching the data\");\n        this.fetchItems();\n        this.fetchVendorItem();\n        this.fetchVendors();\n    }else{\n        this.setState({\n            load : true\n        })\n    }\n  }\n\n  fetchVendors = () => {\n    try{\n      agent.Procure.vendorList()\n      .then(data => {\n          let vendorList = {}\n          data.data.result.forEach( (d) => {\n            vendorList[ d.pk ] = d.fields\n            vendorList[ d.pk ].id = d.pk\n          })\n          this.setState({\n            vendorLookup : vendorList\n          },()=>{\n              this.collectVendor();\n          })\n      })\n    }catch(e){\n          console.log(\"Could not fetch the subject data.\")\n    }\n  }\n\n  fetchVendorItem = () => {\n    try{\n      agent.Procure.vendorItemList()\n      .then(data => {\n          let vendorItemList = {}\n          data.data.result.forEach( (d) => {\n            vendorItemList[ d.fields.item +\"_\"+ d.fields.vendor ] = d.fields\n          })\n          this.setState({\n            vendorItemLookup : vendorItemList\n          },()=>{\n              this.collectVendor();\n          })\n      })\n    }catch(e){\n          console.log(\"Could not fetch the subject data.\")\n    }\n  }\n\n  fetchItems = () => {\n    try{\n      agent.Procure.itemList()\n      .then(data => {\n          let itemList = {}\n          data.data.result.forEach( (d) => {\n            itemList[ d.pk ] = d.fields\n            itemList[ d.pk ].id = d.pk\n            itemList[ d.pk ].vendor = []\n            itemList[ d.pk ].procure = {}\n          })\n          this.setState({\n            itemLookup : itemList\n          },()=>{\n              this.collectVendor();\n          })\n      })\n    }catch(e){\n          console.log(\"Could not fetch the subject data.\")\n    }\n  }\n\n  collectVendor = () => {\n        if( this.state.itemLookup !== null \n            && this.state.vendorLookup !== null \n            && this.state.vendorItemLookup !== null){\n            //Arrange the data so that items have vendors list\n            // Get the key list in Items\n            // Iterate through vendor to find vendors corresponding to item\n            // Add vendors to items\n            //const itemKeys = this.state.itemLookup\n\n            //End the overlay\n            this.endOverlay();\n\n            let itemLookup = this.state.itemLookup;\n            const vendorItemLookup = this.state.vendorItemLookup;\n            for(let vendorItem in vendorItemLookup){\n                let itemId = vendorItemLookup[vendorItem].item;\n                let vendorId = vendorItemLookup[vendorItem].vendor;\n                if( itemLookup[itemId].vendor == undefined ){\n                    itemLookup[itemId].vendor = []\n                }\n                itemLookup[itemId].vendor.push(vendorId)\n            }\n            this.setState({\n                itemLookup : itemLookup,\n                load : true\n            })\n        }\n  }\n\n    selectItem = (_State) => {\n        console.log(_State);\n        this.setState({\n            selectedItem : _State.id,\n        })\n    }\n\n    updateItem = (_State) => {\n        //Get the Item Id\n        const itemId = this.state.selectedItem;\n        const vendorId = _State.vendorId;\n        const price = _State.price;\n        let itemLookup = this.state.itemLookup;\n        let item = itemLookup[itemId];\n\n        let procurementData = item.procure;\n        if( procurementData[vendorId] == undefined ){\n            if( _State.operation == \"add\" || _State.operation == \"update\" ){\n                procurementData[vendorId] = {\n                    vendor : vendorId,\n                    price : price,\n                    qty : _State.number\n                }\n            }\n        }else{\n            let previousQty = procurementData[vendorId].qty;\n            if( _State.operation == \"add\" ){\n                previousQty += 1\n            }else if( _State.operation == \"remove\" ){\n                if( previousQty > 0 ){\n                    previousQty -= 1\n                }\n            }else if( _State.operation == \"update\" ){\n                previousQty = _State.number;\n            }\n            procurementData[vendorId].qty =  parseFloat(previousQty) ;\n        }\n        //Update the item\n        item.procure = procurementData;\n\n        //Update the data to itemLookup\n        itemLookup[itemId] = item;\n\n        //Update the lookup to state\n        this.setState({\n            itemLookup : itemLookup,\n        },()=>{\n            console.log(this.state.itemLookup)\n        })\n    }\n\n  endOverlay = () => {\n    if(this.state.overlay){\n      this.setState({overlay:false})\n      document.getElementById(\"overlay\").style.display = \"none\";\n    }\n  } \n\n  initOverlay = (message) => {\n      if(!this.state.overlay){\n        this.setState({overlay:true})\n        document.getElementById(\"loader-message\").innerText = message\n        document.getElementById(\"overlay\").style.display = \"block\";\n      }\n  }\n\n  moveToCheckout = () => {\n      this.setState({\n        proceedToCheckout : true\n      })\n  }\n\n  renderCheckout = () => {\n    if (this.state.proceedToCheckout) {\n      return (<Redirect to={{\n                  pathname: '/checkout',\n                  state: { data: { itemLookup:  this.state.itemLookup , vendorLookup : this.state.vendorLookup , vendorItemLookup : this.state.vendorItemLookup } }\n              }} />)\n    }\n  }\n\n  clearSelection = () => {\n      let itemLookup = this.state.itemLookup;\n      for(const itemId in itemLookup){\n        itemLookup[itemId].procure = {}\n      }\n      this.setState({\n        itemLookup : itemLookup\n      })\n  }\n\n  render() {\n    const headerDiv = {\n        height : \"7%\",\n        width : \"100%\",\n        textAlign : \"start\",\n        fontSize : \"1.45vw\"\n    }\n    const resultAreaItem = {\n        height : \"100%\",\n        width : \"60%\",\n        float : \"left\"\n    }\n    const checkoutAreaItem = {\n        height : \"100%\",\n        width : \"40%\",\n        float : \"left\",\n    }\n    const resultAreaVendor = {\n        height : \"100%\",\n        width : \"85%\",\n        float : \"left\"\n    }\n    const checkoutAreaVendor = {\n        height : \"100%\",\n        width : \"15%\",\n        float : \"left\",\n    }\n    const iconStyle = {\n        marginLeft : \"5%\"\n    }\n    const vendorListDiv = {\n        height : \"92%\",\n        width : \"100%\",\n        maxHeight : \"92%\",\n        overflowY: \"scroll\"\n    }\n    const itemListDiv = {\n        height : \"92%\",\n        width : \"100%\",\n        maxHeight : \"92%\",\n        overflowY: \"scroll\"\n    }\n    const searchIconStyle = {\n        marginLeft : \"5%\",\n        color : \"#1976D2\",\n        cursor : \"pointer\"\n    }\n    const checkoutBtnStyle = {\n        paddingLeft : \"20%\"\n    }\n\n    //Display the list of items\n    let itemCardList = [];\n    const itemObject = this.state.itemLookup;\n    if(this.state.load){\n        for(let itemId in itemObject){\n            let item = itemObject[itemId];\n            let selected = false;\n            if( itemId == this.state.selectedItem ){\n                selected = true;\n            }\n            itemCardList.push(\n                <div className=\"col-xs-12 item-card-div\" key={item.id}>\n                      <ItemCard\n                        id = {item.id}\n                        name = {item.name}\n                        procure = {item.procure}\n                        selected = {selected}\n                        click = {this.selectItem}\n                      />\n                  </div>\n            )\n        }\n    }\n\n    //Display the vendors list\n    const noItemStyle = {\n        fontSize : \"1.3vw\",\n        marginTop : \"5%\"\n    }\n    let vendorCardList = [];\n    let selectedItemName = \"\";\n    if(this.state.selectedItem == null){\n        vendorCardList = <div style={noItemStyle}>No item selected</div>\n    }else{\n\n        //Update the selected Name\n        selectedItemName = this.state.itemLookup[this.state.selectedItem].name;\n        const vendorIdList = this.state.itemLookup[this.state.selectedItem].vendor;\n        if( vendorIdList.length == 0 ){\n            vendorCardList = <div style={noItemStyle}>No vendor available</div>\n        }else{\n            vendorIdList.forEach((vendorId)=>{\n                let vendor = this.state.vendorLookup[vendorId];\n                //Collect the procurement data\n                let vendorItem = this.state.vendorItemLookup[this.state.selectedItem+\"_\"+vendorId]\n\n                //Get the previous qty selected\n                let vendorCollectData = {};\n                const vendorQty = this.state.itemLookup[this.state.selectedItem].procure[vendorId]\n                if( vendorQty != undefined ){\n                    vendorCollectData = vendorQty;\n                }\n\n                vendorCardList.push(\n                    <div className=\"col-xs-4 vendor-card-div\" key={vendorId}>\n                          <VendorCard\n                            id = {vendorId}\n                            name = {vendor.name}\n                            price = {vendorItem.price}\n                            brand = {vendorItem.brand}\n                            desc = {vendorItem.description}\n                            update = {this.updateItem}\n                            collectData = {vendorCollectData}\n                          />\n                    </div>\n                )\n            })\n        }\n    }\n    return (\n      <div className=\"home-main\">\n          {this.renderCheckout()}\n          <div id=\"overlay\">\n            <Loader \n                className=\"loader-div\"\n                type=\"Puff\"\n                color=\"#00BFFF\"\n            />   \n            <div id=\"loader-message\" style={{color:'#FFFFFF',fontSize : '1.3vw'}}>Loading</div>\n          </div>\n          <div className=\"col-xs-3 full-height item-div\">\n               {/* Header Area */}\n               <div style={headerDiv}>\n                  <div style={resultAreaItem}>Category list</div>\n                  <div style={checkoutAreaItem}>\n                    <div onClick={()=>{this.clearSelection()}} className=\"clear-selection\">Clear selection</div>\n                    {/* <Icon style={searchIconStyle} icon={search} ></Icon> */}\n                  </div>\n               </div>\n               <div className=\"divider-line\"></div>\n               {/* Item List area */}\n              <div style={itemListDiv}>\n                 {itemCardList}\n              </div>\n          </div>\n          <div className=\"col-xs-9 full-height vendor-div\">\n              {/* Header Area */}\n              <div style={headerDiv}>\n                  <div style={resultAreaVendor}>Search Results: {selectedItemName}</div>\n                  <div style={checkoutAreaVendor}>\n                      <div onClick={this.moveToCheckout} className=\"checkout-btn\" style={checkoutBtnStyle}>Checkout <Icon style={iconStyle} icon={shoppingCart} ></Icon></div>\n                  </div>\n              </div>\n              <div className=\"divider-line\"></div>\n              {/* Vendor List area */}\n              <div style={vendorListDiv}>\n                  {vendorCardList}\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\nexport default Home;","import React, { Component } from 'react';\nimport \"./CheckoutItemCard.css\";\n\nclass CheckoutItemCard extends Component {\n  render() {\n    const cardHeader = {\n        height: \"50px\",\n        background : \"#eee\",\n        borderRadius: \"10px 10px 0px 0px\",\n    }\n    const cardItem = {\n        height: \"30px\",\n    }\n    const ItemNameHeader = {\n        fontSize : \"1.1vw\",\n        textAlign : \"start\",\n        paddingTop : \"1.5%\",\n        color : \"#455A64\",\n        fontWeight : \"bold\"\n    }\n    const vendorNameHeader = {\n        fontSize : \"0.9vw\",\n        textAlign : \"start\",\n        paddingTop : \"1.5%\",\n        color : \"#455A64\",\n    }\n    \n    const itemData = this.props.item;\n    let totalPrice = 0;\n    const vendorLookup = this.props.vendorLookup;\n\n    //Adding the vendors data\n    const procurement = itemData.procure;\n    const vendorList = [];\n    for(const vendorId in procurement){\n        const procureData = procurement[vendorId];\n        totalPrice += (parseFloat(procureData.price)*parseFloat(procureData.qty));\n        vendorList.push(\n            <div style={cardItem}>\n              <div className=\"col-xs-10 full-height\" style={vendorNameHeader}>{procureData.qty} x {vendorLookup[vendorId].name}</div>\n              <div className=\"col-xs-2 full-height\" style={vendorNameHeader}>Rs. { parseFloat(procureData.price)* parseFloat(procureData.qty)  }</div>\n              {/* <div className=\"col-xs-2 full-height remove-item\">Remove</div> */}\n            </div>\n        )\n    }\n\n    return (\n      <div className=\"checkout-card-main\">\n          <div style={cardHeader}>\n              <div className=\"col-xs-10 full-height\" style={ItemNameHeader}>{itemData.name}</div>\n              <div className=\"col-xs-2 full-height\" style={ItemNameHeader}>Rs. {totalPrice}</div>\n          </div>\n          {vendorList}\n      </div>\n    )\n  }\n}\nexport default CheckoutItemCard;","import React, { Component } from 'react';\nimport CheckoutItemCard from \"./../CheckoutItemCard/CheckoutItemCard.jsx\";\nimport {Table, Button, Modal} from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Icon from 'react-icons-kit';\nimport \"./Checkout.css\";\n\nclass Checkout extends Component {\n  constructor(props){\n      super(props);\n      console.log(\"Data from home : \",this.props.location.state.data);\n      this.state = {\n          itemLookup : this.props.location.state.data.itemLookup,\n          vendorLookup : this.props.location.state.data.vendorLookup,\n          vendorItemLookup : this.props.location.state.data.vendorItemLookup,\n          confirmationModel : false,\n          renderHome : false\n      }\n  }\n\n  moveToHome = () => {\n    this.setState({\n        renderHome : true\n    })\n  }\n  renderHome = () => {\n    if (this.state.renderHome) {\n        return (<Redirect to={{ \n            pathname: '/' ,\n            state: { data: { itemLookup:  this.state.itemLookup , vendorLookup : this.state.vendorLookup , vendorItemLookup : this.state.vendorItemLookup } } }} />)\n      }\n  }\n\n  updateConfirmationVisibility = () => {\n      if(this.state.confirmationModel){\n           this.setState({\n                confirmationModel : false\n           })\n      }else{\n            this.setState({\n                confirmationModel : true\n            })\n      }\n  }\n\n  confirmtionShow = () => {\n        if(this.state.confirmationModel){\n\n            const thankYouMessage = {\n                height : \"100px\",\n                textAlign : \"center\",\n                fontSize : \"1.1vw\"\n            }\n            const continuePurchase = {\n                height : \"50px\",\n                textAlign : \"center\",\n                fontSize : \"1.1vw\",\n                paddingLeft : \"30%\",\n                paddingRight : \"30%\"\n            }\n            const itemNameCol = {\n                textAlign : \"start\"\n            }\n            let checkoutItemList = [];\n            let tableColumnForBilling = [];\n            let finalBillingPrice = 0;\n            const itemList = this.state.itemLookup;\n            //Collecting Items to show on order screen\n            for(const itemId in itemList){\n                const itemProcure = itemList[itemId].procure;\n                let addItemForBilling = false;\n                let totalItemPrice = 0;\n                let totalItemQty = 0;\n                for(let vendorId in itemProcure){\n                    if( itemProcure[vendorId].qty > 0 ){\n                        addItemForBilling = true;\n                        totalItemQty += parseFloat(itemProcure[vendorId].qty);\n                        totalItemPrice += parseFloat(itemProcure[vendorId].qty)* parseFloat(itemProcure[vendorId].price);\n                    }\n                }\n                if( addItemForBilling ){\n                    checkoutItemList.push(\n                        <div className=\"col-xs-12 checkout-item-card-div\">\n                              <CheckoutItemCard\n                                item = {itemList[itemId]}\n                                vendorLookup = {this.state.vendorLookup}\n                              />\n                        </div>\n                    )\n                }\n                if( totalItemPrice > 0 ){\n                    finalBillingPrice += totalItemPrice;\n                    tableColumnForBilling.push(\n                                <tr>\n                                    <td style={itemNameCol}>{itemList[itemId].name}</td>\n                                    <td>{totalItemQty}</td>\n                                    <td>Rs. {totalItemPrice}</td>\n                                </tr>\n                    )\n                }\n            }\n            return <Modal\n                        show={this.state.confirmationModel}\n                        onHide={() => this.updateConfirmationVisibility()}\n                        dialogClassName=\"modal-90w\"\n                        aria-labelledby=\"example-custom-modal-styling-title\" >\n                            \n                        <Modal.Header closeButton>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\n                            Confirmation\n                        </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div style={thankYouMessage}>\n                                Thank you for purchasing from <b>GrowHospital</b>, we have sent a confirmation email to you.\n                                Please find the order details below.\n                            </div>\n                                <Table bordered hover size=\"sm\">\n                                    <thead>\n                                        <tr>\n                                            <th>Item</th>\n                                            <th>Qty</th>\n                                            <th>Price</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableColumnForBilling}\n                                        <tr>\n                                            <td colSpan=\"2\">Total</td>\n                                            <td>Rs. {finalBillingPrice}</td>\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            <div>Order date</div>\n                                 <div><b>{ (new Date()).toLocaleDateString() }</b></div>\n                            <div style={continuePurchase}>\n                                <div onClick={this.moveToHome} className=\"checkout-btn\">\n                                    Continue Purchase\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n        }\n  }\n\n  render() {\n    const headerDiv = {\n        height : \"7%\",\n        width : \"100%\",\n        textAlign : \"start\",\n        fontSize : \"1.45vw\"\n    }\n    const resultArea = {\n        height : \"100%\",\n        width : \"100%\",\n        float : \"left\"\n    }\n    const orderListDiv = {\n        height : \"92%\",\n        width : \"100%\",\n        maxHeight : \"92%\",\n        overflowY: \"scroll\"\n    }\n    const orderSummary = {\n        height : \"72%\",\n        maxHeight : \"72%\",\n        overflowY : \"scroll\",\n        width : \"100%\",\n        paddingTop : \"2%\"\n    }\n    const officeDetails = {\n        height : \"20%\",\n        width : \"100%\",\n        textAlign : \"start\",\n        fontSize : \"0.9vw\"\n    }\n    const nameHeader = {\n        height : \"100%\",\n        width : \"50%\",\n        float : \"left\"\n    }\n    const iconStyle = {\n        marginLeft : \"5%\"\n    }\n    const confirmCheckoutBtn = {\n        paddingLeft : \"20%\"\n    }\n    const noItemStyle = {\n        fontSize : \"1.3vw\",\n        marginTop : \"5%\"\n    }\n    const itemNameCol = {\n        textAlign : \"start\"\n    }\n    let checkoutItemList = [];\n    let tableColumnForBilling = [];\n    let finalBillingPrice = 0;\n    const itemList = this.state.itemLookup;\n    //Collecting Items to show on order screen\n    for(const itemId in itemList){\n        const itemProcure = itemList[itemId].procure;\n        let addItemForBilling = false;\n        let totalItemPrice = 0;\n        let totalItemQty = 0;\n        for(let vendorId in itemProcure){\n            if( itemProcure[vendorId].qty > 0 ){\n                addItemForBilling = true;\n                totalItemQty += parseFloat(itemProcure[vendorId].qty);\n                totalItemPrice += parseFloat(itemProcure[vendorId].qty)* parseFloat(itemProcure[vendorId].price);\n            }\n        }\n        if( addItemForBilling ){\n            checkoutItemList.push(\n                <div className=\"col-xs-12 checkout-item-card-div\">\n                      <CheckoutItemCard\n                        item = {itemList[itemId]}\n                        vendorLookup = {this.state.vendorLookup}\n                      />\n                </div>\n            )\n        }\n        if( totalItemPrice > 0 ){\n            finalBillingPrice += totalItemPrice;\n            tableColumnForBilling.push(\n                        <tr>\n                            <td style={itemNameCol}>{itemList[itemId].name}</td>\n                            <td>{totalItemQty}</td>\n                            <td>Rs. {totalItemPrice}</td>\n                        </tr>\n            )\n        }\n    }\n    if( checkoutItemList.length == 0 ){\n        checkoutItemList = <div style={noItemStyle}>No item added</div>\n    }\n    return (\n      <div className=\"checkout-main\">\n        {this.renderHome()}\n        {this.confirmtionShow()}\n        <div className=\"col-xs-8 full-height checkout-item-list\">\n            {/* Header Area */}\n            <div style={headerDiv}>\n                <div style={resultArea}>Your Orders</div>\n            </div>\n            <div className=\"divider-line\"></div>\n            <div style={orderListDiv}>\n                {checkoutItemList}\n            </div>\n        </div>\n        <div className=\"col-xs-4 full-height\">\n            {/* Header Area */}\n            <div style={headerDiv}>\n                <div style={nameHeader}>Order Summary</div>\n                <div style={nameHeader}>\n                    <div className=\"checkout-btn\" style={confirmCheckoutBtn} onClick={()=>{this.updateConfirmationVisibility()}}>Confirm Checkout</div>\n                </div>\n            </div>\n            <div className=\"divider-line\"></div>\n            <div style={orderSummary}>\n                <Table bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Item</th>\n                            <th>Qty</th>\n                            <th>Price</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tableColumnForBilling}\n                        <tr>\n                            <td colSpan=\"2\">Total</td>\n                            <td>Rs. {finalBillingPrice}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n            <div className=\"divider-line\"></div>\n            <div style={officeDetails}>\n                <div><b>Sold by:</b></div>\n                <div><b>GrowHospital Private Limited</b></div>\n                <div>\n                    <b>Reg Address</b> - GF, 521, Block A, Jahangir Puri, North West Delhi, New Delhi, 110033\n                </div>\n                <div>\n                    <b>Corporate Office</b> - GF Innov8, Infinity Towers, Cyber City, Gurugram, 122022\n                </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Checkout;","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route ,Switch} from 'react-router-dom';\nimport CustomNavbar from './components/CustomNavbar/CustomNavbar.jsx'\nimport Access from './components/Access/Access.jsx';\nimport Home from './components/Home/Home.jsx';\nimport Checkout from \"./components/Checkout/Checkout.jsx\";\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    let loginAccessVal = 0;\n    this.state = {\n      loginAccess : loginAccessVal,\n    }\n  }\n\n  updateAccessDetails = () => {\n    this.setState({\n      loginAccess : 1,\n    })\n  }\n\n  onLogout = () => {\n    this.setState({\n      loginAccess : 0,\n    })\n  }\n\n  render() {\n    let pages = \"\";\n    if(this.state.loginAccess == 0){\n      pages =  <div className=\"App\">\n                  <Access onSuccess={this.updateAccessDetails}/>\n              </div>\n    }else if(this.state.loginAccess == 1){\n      pages =  <div className=\"App-main\">\n                <div className=\"navbar-section\">\n                  <CustomNavbar\n                    logout = {()=>this.onLogout()}\n                  /> \n                </div>\n                <div className=\"pages\">\n                      <Route exact path='/' component={Home} />\n                      <Route exact path=\"/checkout\" component = {Checkout} />\n                </div>\n              </div>\n    }\n    return (\n      <div style={{height:'100%',width:'100%'}}>\n        <Router>\n          {pages}\n        </Router>\n      </div>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const userReducer = (state = \"\", {type, payload}) => {\n    switch (type){\n        case \"UPDATE_USER\":\n            return payload.user;\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport userReducer from './reducers/user-reducers.js';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst allReducer = combineReducers({\n    user : userReducer,\n})\nconst store = createStore(\n    allReducer, \n    {},\n    window.devToolsExtension && window.devToolsExtension()\n);\n//console.log(store.getState());\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}